plugins {
    id 'io.spring.dependency-management' version '1.0.4.RELEASE'
}
description = 'Parent Project for all Api Testing Sample'

println repositories.mavenLocal().url

allprojects  {
    apply plugin: 'maven'
    group = publishGroup
    version  = publishVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: "io.spring.dependency-management"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            credentials {
                username mavenRepoUser
                password mavenRepoPwd
            }
            url "${mavenRepoBaseUrl}/${mavenRepoName}"
        }
    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-dependencies:2.3.0.RELEASE'
        }
        dependencies {
            dependency 'com.google.guava:guava:23.0'
            dependency 'com.intuit.karate:karate-apache:0.9.6'
            dependency 'com.intuit.karate:karate-junit5:0.9.6'
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                version publishVersion
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
        def repoTarget = version.endsWith("SNAPSHOT") ? "${mavenSnapshotsRepoName}" : "${mavenReleasesRepoName}"
        repositories {
            maven {
                name ='deployRepo'
                url  "${mavenRepoBaseUrl}/${repoTarget}/"
                credentials {
                    username = mavenRepoUser
                    password = mavenRepoPwd
                }
            }
        }
    }

    test {
        useJUnitPlatform()
    }


}